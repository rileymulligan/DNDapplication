package Frames;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.Document;
import org.json.JSONObject;
import org.jsoup.*;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author straf
 */
public class NPCScreen extends javax.swing.JInternalFrame implements Extendable {

    private final JDesktopPane desktopPane;

    
    
    public NPCScreen(JDesktopPane desktopPane) {

        this.desktopPane = desktopPane;
        initComponents();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genNPC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        NPCviewer = new javax.swing.JEditorPane();
        addNPC = new javax.swing.JButton();
        extendButton = new javax.swing.JButton();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        genNPC.setText("Generate");
        genNPC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                genNPCMouseReleased(evt);
            }
        });
        genNPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genNPCActionPerformed(evt);
            }
        });
        genNPC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                genNPCKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(NPCviewer);

        addNPC.setText("Add to notes");
        addNPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNPCActionPerformed(evt);
            }
        });

        extendButton.setText("Extend");
        extendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(genNPC, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(addNPC, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(extendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(genNPC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNPC)
                    .addComponent(extendButton))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genNPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genNPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genNPCActionPerformed

    private void genNPCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genNPCKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_genNPCKeyReleased

    private void genNPCMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genNPCMouseReleased
    // calls the generate NPC 
        try {
        System.out.println("Making Guy!");
        JSONObject tmpNPC = NPCGenerator.generateNPC();
     
        NPCviewer.setText(NPCGenerator.display(tmpNPC));
    } catch (IOException ex) {
        Logger.getLogger(NPCScreen.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_genNPCMouseReleased

    
    /**

    Saves the contents of NPCviewer to a file with the NPC's name as the filename in the "src/main/java/NPC/" directory.

    Replaces any spaces in the filename with underscores.

    @param evt the ActionEvent object that triggered the method.
    */
    private void addNPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNPCActionPerformed
    String npcContent = NPCviewer.getText(); // Get the contents of NPCviewer

    // Extract the NPC's first and last name from the npcContent
    String[] lines = npcContent.split("\\r?\\n");
    String[] nameParts = lines[0].split(" ");
    String firstName = nameParts[1];
    String lastName = nameParts[2];

    // Create the filename from the NPC's name
    String filename = firstName + "-" + lastName;

    // Replace any spaces in the filename with underscores
    filename = filename.replaceAll("\\s+", "_");

    // Create a new file object with the NPC's name as the filename
    File npcFile = new File("classes/NPC/" + filename + ".txt");

    try {
        // Write the NPC content to the file
        FileWriter writer = new FileWriter(npcFile);
        writer.write(npcContent);
        writer.close();

        // Show a success message
        JOptionPane.showMessageDialog(this, "NPC saved successfully.");
    } catch (IOException ex) {
        Logger.getLogger(NPCScreen.class.getName()).log(Level.SEVERE, null, ex);

        // Show an error message
        JOptionPane.showMessageDialog(this, "Error saving NPC: " + ex.getMessage());
    }
        
    }//GEN-LAST:event_addNPCActionPerformed

    /**

    Handles the "extendButton" action event by creating a new internal frame with the text from "NPCviewer" JTextArea

    and adding it to the "desktopPane".

    @param evt the action event that occurred.
    */
    private void extendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extendButtonActionPerformed
        JTextArea npcText = new JTextArea();
        npcText.setText(NPCviewer.getText());
       
        Extendable extendable = new Extendable() {};
        extendable.createNewInternalFrame(npcText, desktopPane); 
        System.out.println("Extended");
        
    }//GEN-LAST:event_extendButtonActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane NPCviewer;
    private javax.swing.JButton addNPC;
    private javax.swing.JButton extendButton;
    private javax.swing.JButton genNPC;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


    
}

